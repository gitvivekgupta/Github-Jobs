{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Downloads/My things/test/increvenue/sub/task/src/App.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport Userinput from \"./languages\";\nimport Show from \"./show\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      type: undefined,\n      url: undefined,\n      created: undefined,\n      company: undefined,\n      company_domain: undefined,\n      location: undefined,\n      job_title: undefined,\n      description: undefined,\n      logo: undefined,\n      apply: undefined\n    };\n\n    this.get_data = async e => {\n      e.preventDefault();\n      const language = e.target.elements.skill.value; // axios.get(`https://jobs.github.com/positions.json?description=${language}`)\n      //   .then((result) => {\n\n      const api_call = await fetch(\"https://jobs.github.com/positions.json?description=\".concat(language));\n      const data = await api_call.json();\n\n      if (language === true) {\n        console.log(result);\n        this.setState({\n          type: result.type,\n          url: result.url,\n          created_at: result.created_at,\n          company: result.company,\n          company_url: result.company_url,\n          location: result.location,\n          job_title: result.job_title,\n          description: result.description,\n          company_logo: result.company_logo,\n          how_to_apply: result.how_to_apply,\n          error: \"\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"What Programming language are you looking a Job in?\"), React.createElement(Userinput, {\n      get_data: this.get_data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Show, {\n      type: this.state.type,\n      url: this.state.url,\n      created_at: this.state.created,\n      company: this.state.company,\n      company_url: this.state.company_url,\n      location: this.state.location,\n      job_title: this.state.job_title,\n      description: this.state.description,\n      company_logo: this.state.company_logo,\n      how_to_apply: this.state.how_to_apply,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/mac/Downloads/My things/test/increvenue/sub/task/src/App.js"],"names":["React","axios","Userinput","Show","App","Component","state","type","undefined","url","created","company","company_domain","location","job_title","description","logo","apply","get_data","e","preventDefault","language","target","elements","skill","value","api_call","fetch","data","json","console","log","result","setState","created_at","company_url","company_logo","how_to_apply","error","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nimport Userinput from \"./languages\";\nimport Show from \"./show\";\n\nclass App extends React.Component {\n\n  state = {\n    type: undefined,\n    url: undefined,\n    created: undefined,\n    company: undefined,\n    company_domain: undefined,\n    location: undefined,\n    job_title: undefined,\n    description: undefined,\n    logo: undefined,\n    apply: undefined \n  }\n\n  get_data = async (e) => {\n\n    e.preventDefault();\n\n    const language = e.target.elements.skill.value;\n\n    // axios.get(`https://jobs.github.com/positions.json?description=${language}`)\n    //   .then((result) => {\n\n    const api_call = await fetch(`https://jobs.github.com/positions.json?description=${language}`)\n      \n    const data = await api_call.json();\n    \n    if (language === true) {\n\n      console.log(result);\n\n      this.setState({\n\n        type: result.type,\n        url: result.url,\n        created_at: result.created_at,\n        company: result.company,\n        company_url: result.company_url,\n        location: result.location,\n        job_title: result.job_title,\n        description: result.description,\n        company_logo: result.company_logo,\n        how_to_apply: result.how_to_apply,\n        error: \"\"\n      })\n    }\n  };\n\n\n  render() {\n\n    return(\n      <div>\n\n        <h2>What Programming language are you looking a Job in?</h2>\n\n        <Userinput get_data={this.get_data}/>\n\n        <Show \n          type = {this.state.type}\n          url = {this.state.url}\n          created_at = {this.state.created}\n          company = {this.state.company}\n          company_url = {this.state.company_url}\n          location = {this.state.location}\n          job_title = {this.state.job_title}\n          description = {this.state.description}\n          company_logo = {this.state.company_logo}\n          how_to_apply = {this.state.how_to_apply}\n          error = {this.state.error}\n        />\n\n\n      </div>\n    );\n  }\n};\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}